generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  password  String
  role      Role      @default(CUSTOMER)
  createdAt DateTime  @default(now()) @map("created_at")
  carts     Cart[]
  orders    Order[]

  @@map("users")
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  price       Int
  description String    @db.Text
  stock       Int       @default(0)
  imageUrl    String    @map("image_url")
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  createdAt   DateTime  @default(now()) @map("created_at")
  cartItems   CartItem[]
  orderItems  OrderItem[]

  @@map("products")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique @map("category")
  products  Product[]
  
  @@map("categories")
}

model Cart {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @map("user_id")
  items     CartItem[]
  createdAt DateTime  @default(now()) @map("created_at")

  @@map("carts")
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int     @map("cart_id")
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
  quantity  Int     @default(1)

  @@map("cart_items")
}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      String      @map("user_id")
  items       OrderItem[]
  totalAmount Int         @map("total_amount")
  status      Status      @default(PENDING)
  createdAt   DateTime    @default(now()) @map("created_at")

  @@map("orders")
}

model OrderItem {
  id          Int     @id @default(autoincrement())
  order       Order   @relation(fields: [orderId], references: [id])
  orderId     Int     @map("order_id")
  product     Product @relation(fields: [productId], references: [id])
  productId   Int     @map("product_id")
  quantity    Int
  price       Int     @map("price_per_unit")

  @@map("order_items")
}

enum Role {
  ADMIN
  CUSTOMER
}

enum Status {
  CANCELED
  PENDING
  PAID
  FAILED
}